---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-oos-operator
  namespace: node-oos-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-oos-operator
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-oos-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-oos-operator
subjects:
- kind: ServiceAccount
  name: node-oos-operator
  namespace: node-oos-operator
---
apiVersion: v1
kind: Namespace
metadata:
  name: node-oos-operator
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---
apiVersion: v1
kind: Service
metadata:
  name: node-oos-operator-metrics
  namespace: node-oos-operator
  labels:
    app.kubernetes.io/name: node-oos-operator
    app.kubernetes.io/component: metrics
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: node-oos-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-oos-operator
  namespace: node-oos-operator
  labels:
    app.kubernetes.io/name: node-oos-operator
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-oos-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-oos-operator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: node-oos-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: operator
        image: infrabuilder/node-oos-operator:latest
        imagePullPolicy: Always
        env:
        - name: NOT_READY_THRESHOLD
          value: "300s"
        - name: RECOVERY_THRESHOLD
          value: "60s"
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/controlplane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: node-oos-operator
  namespace: node-oos-operator
  labels:
    app.kubernetes.io/name: node-oos-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-oos-operator
      app.kubernetes.io/component: metrics
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics